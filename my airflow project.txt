# import the libraries
from datetime import timedelta
# The DAG object; we'll need this to instantiate a DAG
from airflow import DAG
# Operators; we need this to write tasks!
from airflow.operators.bash_operator import BashOperator
# This makes scheduling easy
from airflow.utils.dates import days_ago

#defining DAG arguments
default_args = {
    'owner': 'Mike Eagle',
    'start_date': days_ago(0),
    'email': ['Eagle@somemail.com'],
    'email_on_failure': True,
    'email_on_retry': True,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# define the DAG
dag = DAG(
    dag_id='ETL_toll_data',
    default_args=default_args,
    description='ETL_toll_data',
    schedule_interval=timedelta(days=1),
)

# define the tasks
# define the unzip task
unzip_data = BashOperator(
    task_id='unzip_data',
    bash_command='sudo tar -xzf tolldata.tgz',
    dag=dag,
)

# define the tasks
# define the extract_data_from_csv task
extract_data_from_csv = BashOperator(
    task_id='extract_data_from_csv',
    bash_command=' sudo cut -d',' -f1-4 vehicle-data.csv | sudo tee /home/project/airflow/dags/finalassignment/staging/csv_data.csv',
    dag=dag,
)

# define the tasks
# define the extract_data_from_tsv task
extract_data_from_tsv = BashOperator(
    task_id='extract_data_from_tsv',
    bash_command='sudo cut -f5-7 tollplaza-data.tsv | tr '\t' ',' | sudo tee /home/project/airflow/dags/finalassignment/staging/tsv_data.csv',
    dag=dag,
)

# define the tasks
# define the extract_data_from_fixed_width task
extract_data_from_fixed_width = BashOperator(
    task_id='extract_data_from_fixed_width',
    bash_command=' sudo awk '{print $10, $11}' payment-data.txt | sed 's/ /,/g'  | cut -d',' -f1,2 | sudo tee /home/project/airflow/dags/finalassignment/staging/fixed_width_data.csv',
    dag=dag,
)

# define the tasks
# define the consolidate_data task
consolidate_data = BashOperator(
    task_id='consolidate_data',
    bash_command=' sudo paste  -d ',' csv_data.csv tsv_data.csv fixed_width_data.csv | sudo tee /home/project/airflow/dags/finalassignment/staging/extracted_data.csv',
    dag=dag,
)


# define the tasks
# define the transform_data task
transform_data = BashOperator(
    task_id='transform_data',
    bash_command=' sudo awk 'BEGIN{FS=OFS=","} { $4 = toupper($4) } 1' extracted_data.csv | sudo tee /home/project/airflow/dags/finalassignment/staging/transformed_data.csv',
    dag=dag,
)

# of columns in csv
awk -F ',' 'NR==1{print NF; exit}' extracted_data.csv

#list the columns in my csv files using bash command
head -n 4 extracted_data.csv | awk -F ',' '{for(i=1; i<=NF; i++) print $i}'

unzip_data >> extract_data_from_csv >>  extract_data_from_tsv >> extract_data_from_fixed_width >> consolidate_data >> transform_data

submit dag 
cp /home/project/ETL_toll_data.py $AIRFLOW_HOME/dags